#!/usr/bin/env escript
%% -*- erlang -*-

write_config([Dict, Params, Dest]) ->
    Configured = lists:foldl(fun({K, V}, Acc)->
				     case V of
					 false ->
					     Acc;
					 _ ->
					     dict:store(K, V, Acc)
				     end
			     end, Dict, Params),
    {ok, S} = file:open(Dest, write),
    io:format(S, "~p.", [dict:to_list(Configured)]).

main(["-site", Src, Dest]) ->
    {ok, [Terms]} = file:consult(Src),
    Url = os:getenv("DB_PORT"),
    {ok, {_, _, Host, Port, [$/ | _], _}} = http_uri:parse(Url),
    Dict = dict:from_list(Terms),
    Params = [{dbhost, Host}, {dbport, Port}],
    write_config([Dict, Params, Dest]);

main([Src, Dest])->
    {ok, [Terms]} = file:consult(Src),
    Url = os:getenv("DB_PORT"),
    UserPass = os:getenv("DB_USERPASS"),
    DbName = os:getenv("DBDATABASE"),
    DbSchema = os:getenv("DBSCHEMA"),
    Password = os:getenv("ADMINPASSWORD"),
    {ok, {_, _, Host, Port, [$/ | _], _}} = http_uri:parse(Url),
    [User, Pass] = case UserPass of
		       false ->
			   [os:getenv("DBUSER"), os:getenv("DBPASSWORD")];
		       _ -> string:tokens(UserPass, ":")
		   end,
    Dict = dict:from_list(Terms),
    Params = [{dbhost, Host}, {dbport, Port}, {dbuser, User},
	      {dbpassword, Pass}, {dbdatabase, DbName},
	      {password, Password}, {dbschema, DbSchema}],
    write_config([Dict, Params, Dest]);

main(_)->
    io:format("usage: zotonic_config [-site] <src_config_file> <destination_config_file>~n").
